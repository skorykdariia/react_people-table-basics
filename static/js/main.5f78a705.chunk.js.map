{"version":3,"sources":["components/Navigation/Navigations.tsx","App.tsx","components/HomePage/HomePage.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","index.tsx"],"names":["Navigation","className","role","to","isActive","cn","App","HomePage","memo","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","downloadPeople","peopleFromServer","filteredPeople","find","f","m","useEffect","length","PageNotFound","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.5f78a705.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => cn(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => cn(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation/Navigations';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React, { memo } from 'react';\n\nexport const HomePage: React.FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={cn(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n));\n","import React from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            className={cn({ 'has-background-warning': person.slug === slug })}\n            key={person.slug}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { memo, useEffect, useState } from 'react';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const downloadPeople = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      const filteredPeople = peopleFromServer.map(person => {\n        const father = peopleFromServer.find(f => (\n          f.name === person.fatherName\n        ));\n        const mother = peopleFromServer.find(m => (\n          m.name === person.motherName\n        ));\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(filteredPeople);\n    } catch (e) {\n      setError('Unable to load people');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    downloadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title people-title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import React, { memo } from 'react';\n\nexport const PageNotFound: React.FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route index element={<HomePage />} />\n\n        <Route\n          path=\"home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n\n      <App />\n\n    </Router>,\n  );\n"],"sourceRoot":""}